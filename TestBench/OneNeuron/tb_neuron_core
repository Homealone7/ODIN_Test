`timescale 1ns/1ns

module tb_neuron_core;

    // Parameters
    parameter N = 256;
    parameter M = 8;

    // Clock and reset signals
    reg CLK;
    reg RSTN_syncn;

    // Signals for neuron_core instantiation
    reg SPI_GATE_ACTIVITY_sync;
    reg SPI_PROPAGATE_UNMAPPED_SYN;
    reg [31:0] SYNARRAY_RDATA;
    reg SYN_SIGN;
    reg CTRL_NEUR_EVENT;
    reg CTRL_NEUR_TREF;
    reg [4:0] CTRL_NEUR_VIRTS;
    reg CTRL_NEURMEM_CS;
    reg CTRL_NEURMEM_WE;
    reg [M-1:0] CTRL_NEURMEM_ADDR;
    reg [2*M-1:0] CTRL_PROG_DATA;
    reg [2*M-1:0] CTRL_SPI_ADDR;
    reg CTRL_NEUR_BURST_END;
    wire [127:0] NEUR_STATE;
    wire [6:0] NEUR_EVENT_OUT;
    reg [N-1:0] NEUR_V_UP;
    reg [N-1:0] NEUR_V_DOWN;
    wire [14:0] NEUR_STATE_MONITOR;

    // Instantiate the neuron_core
    neuron_core u_neuron_core (
        .RSTN_syncn(RSTN_syncn),
        .CLK(CLK),
        .SPI_GATE_ACTIVITY_sync(SPI_GATE_ACTIVITY_sync),
        .SPI_PROPAGATE_UNMAPPED_SYN(SPI_PROPAGATE_UNMAPPED_SYN),
        .SYNARRAY_RDATA(SYNARRAY_RDATA),
        .SYN_SIGN(SYN_SIGN),
        .CTRL_NEUR_EVENT(CTRL_NEUR_EVENT),
        .CTRL_NEUR_TREF(CTRL_NEUR_TREF),
        .CTRL_NEUR_VIRTS(CTRL_NEUR_VIRTS),
        .CTRL_NEURMEM_CS(CTRL_NEURMEM_CS),
        .CTRL_NEURMEM_WE(CTRL_NEURMEM_WE),
        .CTRL_NEURMEM_ADDR(CTRL_NEURMEM_ADDR),
        .CTRL_PROG_DATA(CTRL_PROG_DATA),
        .CTRL_SPI_ADDR(CTRL_SPI_ADDR),
        .CTRL_NEUR_BURST_END(CTRL_NEUR_BURST_END),
        .NEUR_STATE(NEUR_STATE),
        .NEUR_EVENT_OUT(NEUR_EVENT_OUT),
        .NEUR_V_UP(NEUR_V_UP),
        .NEUR_V_DOWN(NEUR_V_DOWN),
        .NEUR_STATE_MONITOR(NEUR_STATE_MONITOR)
    );

    // Clock generation
    initial CLK = 0;
    always #5 CLK = ~CLK;

    // Test Stimulus
    initial begin
        // Reset sequence
        RSTN_syncn = 0;
        #10 RSTN_syncn = 1;

        // Set some example input conditions to stimulate the neuron
        SPI_GATE_ACTIVITY_sync = 1;
        SPI_PROPAGATE_UNMAPPED_SYN = 1;
        SYNARRAY_RDATA = 32'h0000_0001;
        SYN_SIGN = 0;
        CTRL_NEUR_EVENT = 1;
        CTRL_NEUR_TREF = 0;
        CTRL_NEUR_VIRTS = 5'b00000;
        CTRL_NEURMEM_CS = 1;
        CTRL_NEURMEM_WE = 1;
        CTRL_NEURMEM_ADDR = 0;
        CTRL_PROG_DATA = 0;
        CTRL_SPI_ADDR = 0;
        CTRL_NEUR_BURST_END = 0;

        // Let the simulation run for a while
        #200;

        // Finish the simulation
        $finish;
    end

    // Monitor Outputs
    initial begin
        wait(NEUR_EVENT_OUT);
        $display("@%t - Neuron event out: %b", $time, NEUR_EVENT_OUT);
    end

endmodule